{"version":3,"file":"component---src-pages-moving-motivators-health-check-tsx-5c8bc5bbd4aef972022a.js","mappings":"gNAqDA,UA9CoB,WAClB,OAA+BA,EAAAA,EAAAA,KAAvBC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,MACrB,GAAiDC,EAAAA,EAAAA,KAAzCC,EAAR,EAAQA,qBAAsBC,EAA9B,EAA8BA,eAY9B,OACE,UAAC,IAAD,YACE,SAAC,IAAD,CACEC,QAASF,EACTG,OAAQ,SAAAC,GAAK,OAAIH,EAAe,CAAED,qBAAsBI,KACxDC,SAAU,WACVC,WAAY,OACZC,MAAOC,EAAAA,GAAAA,WAAAA,MALT,SAMGA,EAAAA,GAAAA,WAAAA,OAEFV,EAAMW,KAAI,SAACC,EAAWC,GAAZ,OACT,SAAC,IAAD,CAEEC,GAAIF,EAAUE,GACdC,SAAUH,EAAUG,SACpBC,WAAY,CACV,CAAEC,MAAO,MAAOX,MAAO,GACvB,CAAEW,MAAO,KAAMX,OAAQ,IAEzBY,cAAe,SAAAC,GAAS,OA7BV,SAACL,EAAYK,GACjCpB,EACEC,EAAMW,KAAI,SAAAS,GAAC,OACTA,EAAEN,KAAOA,EAAT,iBACSM,EADT,CACYD,UAAWC,EAAED,YAAcA,EAAY,EAAIA,IACnDC,MAwB0BF,CAAcN,EAAUE,GAAIK,IACxDE,iBAAkBT,EAAUO,UAC5BN,MAAOA,EACPS,MAAOV,EAAUU,MACjBC,KAAMX,EAAUW,KAChBC,KAAMZ,EAAUY,KAChBC,YAAab,EAAUa,aAblBb,EAAUE","sources":["webpack://gatsby-starter-pack/./src/pages/moving-motivators/health-check.tsx"],"sourcesContent":["import { Layout } from '../../components/Layout/Layout';\nimport { Motivator } from '../../components/Motivator/Motivator';\nimport { Popover } from '../../library/Popover/Popover';\nimport { useMotivators } from '../../state/hooks/useMotivators';\nimport { useSettings } from '../../state/hooks/useSettings';\nimport { texts } from '../../utils/configs';\n\nconst HealthCheck = () => {\n  const { updateCards, cards } = useMotivators();\n  const { isMotivatorsInfoOpen, updateSettings } = useSettings();\n\n  const makeSelection = (id: number, selection: number) => {\n    updateCards(\n      cards.map(c =>\n        c.id === id\n          ? { ...c, selection: c.selection === selection ? 0 : selection }\n          : c\n      )\n    );\n  };\n\n  return (\n    <Layout>\n      <Popover\n        isShown={isMotivatorsInfoOpen}\n        toggle={value => updateSettings({ isMotivatorsInfoOpen: value })}\n        position={'top-left'}\n        buttonIcon={'help'}\n        title={texts.motivators.title}>\n        {texts.motivators.info}\n      </Popover>\n      {cards.map((motivator, index) => (\n        <Motivator\n          key={motivator.id}\n          id={motivator.id}\n          examples={motivator.examples}\n          selections={[\n            { label: 'Yes', value: 1 },\n            { label: 'No', value: -1 },\n          ]}\n          makeSelection={selection => makeSelection(motivator.id, selection)}\n          currentSelection={motivator.selection}\n          index={index}\n          color={motivator.color}\n          icon={motivator.icon}\n          name={motivator.name}\n          description={motivator.description}\n        />\n      ))}\n    </Layout>\n  );\n};\n\nexport default HealthCheck;\n"],"names":["useMotivators","updateCards","cards","useSettings","isMotivatorsInfoOpen","updateSettings","isShown","toggle","value","position","buttonIcon","title","texts","map","motivator","index","id","examples","selections","label","makeSelection","selection","c","currentSelection","color","icon","name","description"],"sourceRoot":""}